.meta_data.meta_data_block{:id => "#{context.name}"}
  != auto_link(context.description.to_s, :all, :target => "_blank")

  :ruby
    meta_data = resource.object.meta_data.for_context(context)
    labels = {}
    last_label = nil
    meta_data.each do |md|
      label = md.meta_key.label
      current_head_label = label.split.first
      last_head_label = (last_label ? last_label.split.first : nil)
      if current_head_label == last_head_label
        labels[last_label] << label
      else
        last_label = label
        labels[last_label] = []
      end 
    end
    labels.delete_if {|k, v| v.size < 2 }

  = resource.fields_for :meta_data, meta_data do |meta_datum|
    :ruby
      label = meta_datum.object.meta_key.label
      next if meta_datum.object.meta_key.is_dynamic? and not ["copyright usage", "copyright url"].include?(label) # OPTIMIZE
      definition = context.meta_definitions.where(:meta_key_id => meta_datum.object._id).first
      underscored_label = label.gsub(/\W+/, '_')
      parent_underscored_label = labels.detect {|x| x.last.include?(label) }.try(:first).try(:gsub, /\W+/, '_')
      is_parent = (!parent_underscored_label and labels.has_key?(label))
      classes = [meta_datum.object.meta_key.object_type]
      classes << "parent" if is_parent
      classes.compact!
    %ul{:"data-meta_key" => underscored_label, :"data-parent_meta_key" => parent_underscored_label, :class => (classes.blank? ? nil : classes.join(' '))}
      %li.label{:style => "width: 30%;"}
        = definition.label
        - if definition.hint
          %span.hint
            = definition.hint
        - if is_parent
          .expander
            = link_to _("+ Weitere Angaben"), "#"
      %li{:style => "width: 55%;"}
        =#wip#2 meta_datum.hidden_field :id unless meta_datum.object.new_record?
        = meta_datum.hidden_field :keep_original_value, :class => "keep" if meta_datum.object.keep_original_value
        = field_tag(meta_datum, context)
      %li{:style => "width: auto;"}
        = description_toggler(definition) # TODO unescape html with !=
